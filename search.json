[{"path":"https://r-world-devs.github.io/queryBuilder/articles/operators.html","id":"operators-viable-for-any-type-of-field","dir":"Articles","previous_headings":"","what":"Operators viable for any type of field:","title":"Operators","text":"equal - check field elements equal provided value R method: ==. Sample rule: queryRule(field = \"cyl\", operator = \"equal\", value = 1) Sample rule expression: cyl == 4 Argument value required, single value. not_equal - check field elements different provided value R method: !=. Sample rule: queryRule(field = \"cyl\", operator = \"not_equal\", value = 1) Sample rule expression: cyl != 4 Argument value required, single value. - check field elements matches provided set values R method: `%%`. Sample rule: queryRule(field = \"cyl\", operator = \"\", value = c(4, 6)) Sample rule expression: cyl %% c(4, 6) Argument value required, non-empty vector. not_in - check field elements match provided set values R method: !`%%`. Sample rule: queryRule(field = \"cyl\", operator = \"not_in\", value = c(4, 6)) Sample rule expression: !cyl %% c(4, 6) Argument value required, non-empty vector. is_null - check field elements missing (NA) R method: .na. Sample rule: queryRule(field = \"cyl\", operator = \"is_null\") Sample rule expression: .na(cyl) Argument value ignored. not_is_null - check field elements different provided value R method: !.na. Sample rule: queryRule(field = \"cyl\", operator = \"not_is_null\") Sample rule expression: !.na(cyl) Argument value ignored.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/articles/operators.html","id":"operators-viable-for-numerical-and-datetime-based-fields","dir":"Articles","previous_headings":"","what":"Operators viable for numerical and date/time based fields:","title":"Operators","text":"less - check field elements lesser provided value R method: <. Sample rule: queryRule(field = \"cyl\", operator = \"less\", value = 6) Sample rule expression: cyl < 6 Argument value required, single value. less_or_equal - check field elements lesser equal provided value R method: <=. Sample rule: queryRule(field = \"cyl\", operator = \"less_or_equal\", value = 6) Sample rule expression: cyl <= 6 Argument value required, single value. greater - check field elements greater provided value R method: >. Sample rule: queryRule(field = \"cyl\", operator = \"greater\", value = 6) Sample rule expression: cyl > 6 Argument value required, single value. greater_or_equal - check field elements greater equal provided value R method: >=. Sample rule: queryRule(field = \"cyl\", operator = \"greater_or_equal\", value = 6) Sample rule expression: cyl >= 6 Argument value required, single value. - check field elements fit within provided range (boundary excluded) R method: queryBuilder::in_range. Sample rule: queryRule(field = \"cyl\", operator = \"\", value = c(4, 8)) Sample rule expression: queryBuilder::in_range(cyl, c(4, 8)) Argument value required, non-empty vector. not_between - check field elements match provided set values (boundary included) R method: !queryBuilder::in_range. Sample rule: queryRule(field = \"cyl\", operator = \"not_between\", value = c(4, 8)) Sample rule expression: !queryBuilder::in_range(cyl, c(4, 8)) Argument value required, non-empty vector.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/articles/operators.html","id":"operators-viable-for-character-fields","dir":"Articles","previous_headings":"","what":"Operators viable for character fields:","title":"Operators","text":"begins_with - check field elements start provided string value R method: startsWith. Sample rule: queryRule(field = \"Species\", operator = \"begins_with\", value = \"setos\") Sample rule expression: startsWith(Species, \"setos\") Argument value required, single character value. not_begins_with - check field elements start provided string value R method: !startsWith. Sample rule: queryRule(field = \"Species\", operator = \"not_begins_with\", value = \"setos\") Sample rule expression: !startsWith(Species, \"setos\") Argument value required, single value. contains - check field elements start provided string value R method: queryBuilder::in_string. Sample rule: queryRule(field = \"Species\", operator = \"contains\", value = \"setos\") Sample rule expression: queryBuilder::in_string(Species, \"setos\") Argument value required, single character value. not_contains - check field elements start provided string value R method: !queryBuilder::in_string. Sample rule: queryRule(field = \"Species\", operator = \"not_contains\", value = \"etos\") Sample rule expression: !queryBuilder::in_string(Species, \"etos\") Argument value required, single value. ends_with - check field elements end provided string value R method: endsWith. Sample rule: queryRule(field = \"Species\", operator = \"ends_with\", value = \"etosa\") Sample rule expression: endsWith(Species, \"etosa\") Argument value required, single character value. not_ends_with - check field elements end provided string value R method: !startsWith. Sample rule: queryRule(field = \"Species\", operator = \"not_ends_with\", value = \"setos\") Sample rule expression: !endsWith(Species, \"etosa\") Argument value required, single value. is_empty - check field elements empty string R method: queryBuilder::is_empty. Sample rule: queryRule(field = \"Species\", operator = \"is_empty\") Sample rule expression: queryBuilder::is_empty(cyl) Argument value ignored. not_is_empty - check field elements empty string R method: !queryBuilder::is_empty. Sample rule: queryRule(field = \"Species\", operator = \"not_is_empty\") Sample rule expression: !queryBuilder::is_empty(cyl) Argument value ignored. order set custom operators please check setQueryOperators().","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Krystian Igras. Author, maintainer.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Igras K (2024). queryBuilder: Programmatic Way Construct Complex Filtering Queries. R package version 0.1.0.","code":"@Manual{,   title = {queryBuilder: Programmatic Way to Construct Complex Filtering Queries},   author = {Krystian Igras},   year = {2024},   note = {R package version 0.1.0}, }"},{"path":[]},{"path":"https://r-world-devs.github.io/queryBuilder/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Programmatic Way to Construct Complex Filtering Queries","text":"queryBuilder provides syntax defining complex filtering expressions programmatically. Filtering query, built nested list configuration, can easily stored formats like ‘YAML’ ‘JSON’. package also allows convert configuration valid expression can applied popular ‘dplyr’ package operations.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/index.html","id":"rules","dir":"","previous_headings":"Overview","what":"Rules","title":"Programmatic Way to Construct Complex Filtering Queries","text":"package allows construct queries using rules (queryRule) filtering operations performed single query. single rule consists : field - name variable/column filtered, operator - name filtering function apply field, value - non-mandatory value precising filtering operator. example: default package configuration, interpreted == 1 expression. order convert rule expression use queryToExpr function: expression can used dplyr::filter: see full list supported operators (along corresponding R functions) check: detailed description supported operators can found vignette(\"operators\"). can also define custom operators setQueryOperators().","code":"queryRule(   field = \"am\",   operator = \"equal\",   value = 1 ) my_query <- queryRule(   field = \"am\",   operator = \"equal\",   value = 1 ) queryToExpr(my_query) #> am == 1 mtcars %>% dplyr::filter(!!queryToExpr(my_query)) #> # A tibble: 13 × 11 #>     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1  21       6 160     110  3.9   2.62  16.5     0     1     4     4 #> 2  21       6 160     110  3.9   2.88  17.0     0     1     4     4 #> 3  22.8     4 108      93  3.85  2.32  18.6     1     1     4     1 #> 4  32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1 #> 5  30.4     4  75.7    52  4.93  1.62  18.5     1     1     4     2 #> # ℹ 8 more rows listQueryOperators() #> equal: == #> not_equal: != #> in: %in% #> not_in: Negate(`%in%`) #> less: < #> less_or_equal: <= #> greater: > #> greater_or_equal: >= #> between: queryBuilder::in_range #> not_between: Negate(queryBuilder::in_range) #> begins_with: startsWith #> not_begins_with: Negate(startsWith) #> contains: queryBuilder::in_string #> not_contains: Negate(queryBuilder::in_string) #> ends_with: endsWith #> not_ends_with: Negate(endsWith) #> is_empty: queryBuilder::is_empty #> not_is_empty: Negate(queryBuilder::is_empty) #> is_null: is.na #> not_is_null: Negate(is.na)"},{"path":"https://r-world-devs.github.io/queryBuilder/index.html","id":"groups","dir":"","previous_headings":"Overview","what":"Groups","title":"Programmatic Way to Construct Complex Filtering Queries","text":"build complex queries queryBuilder introduces groups (queryGroup) allow combine multiple rules specified condition (logical operator). query: uses \"\" condition combine two rules default interpreted & logical operator: queryGroup can also combine groups enables build even advanced queries: default packages supports two conditions (&) (|) can add custom one setQueryConditions().","code":"my_query <- queryGroup(   condition = \"AND\",   queryRule(     field = \"am\",     operator = \"equal\",     value = 1   ),   queryRule(     field = \"vs\",     operator = \"equal\",     value = 0   ) ) queryToExpr(my_query) #> am == 1 & vs == 0 my_query <- queryGroup(   condition = \"AND\",   queryRule(\"qsec\", \"greater\", 20),   queryGroup(     condition = \"OR\",     queryRule(       field = \"am\",       operator = \"equal\",       value = 1     ),     queryRule(       field = \"vs\",       operator = \"equal\",       value = 0     )   ) ) queryToExpr(my_query) #> qsec > 20 & (am == 1 | vs == 0)"},{"path":"https://r-world-devs.github.io/queryBuilder/index.html","id":"relation-to-jquery-querybuilder","dir":"","previous_headings":"Overview","what":"Relation to jQuery-QueryBuilder","title":"Programmatic Way to Construct Complex Filtering Queries","text":"introduced syntax (rules, groups, operators conditions) based query constructing rules offered jQuery-QueryBuilder JS framework. queryBuilder package intended used backend shinyQueryBuilder package allow users use jQuery-QueryBuilder Shiny.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Programmatic Way to Construct Complex Filtering Queries","text":"","code":"# CRAN version install.packages(\"queryBuilder\")  # Latest development version remotes::install_github(\"https://github.com/r-world-devs/queryBuilder\")"},{"path":"https://r-world-devs.github.io/queryBuilder/index.html","id":"acknowledgement","dir":"","previous_headings":"","what":"Acknowledgement","title":"Programmatic Way to Construct Complex Filtering Queries","text":"Special thanks Kamil Wais, Adam Foryś, Maciej Banaś,Karolina Marcinkowska Kamil Koziej support package development thorough testing functionality.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Programmatic Way to Construct Complex Filtering Queries","text":"case found bugs, feature request general question please file issue package Github. may also contact package author directly via email krystian8207@gmail.com.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/attach_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine two lists — attach_to_list","title":"Combine two lists — attach_to_list","text":"Combine two lists","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/attach_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine two lists — attach_to_list","text":"","code":"attach_to_list(base_list, extra_list)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/attach_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine two lists — attach_to_list","text":"base_list List attach objects . extra_list List elements attached base_list. Duplicated objects overwritten.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/attach_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine two lists — attach_to_list","text":"List.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/err_msg.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate error message — err_msg","title":"Generate error message — err_msg","text":"Generate error message","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/err_msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate error message — err_msg","text":"","code":"err_msg(msg, ...)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/err_msg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate error message — err_msg","text":"msg Character string interpreted glue. ... Extra arguments passed glue.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/err_msg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate error message — err_msg","text":"Executed error interpolated message.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/in_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if value fits to a range — in_range","title":"Check if value fits to a range — in_range","text":"Check value fits range","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/in_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if value fits to a range — in_range","text":"","code":"in_range(x, range)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/in_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if value fits to a range — in_range","text":"x Numeric value. range Vector length 2, storing range change limits.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/in_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if character value matches the provided pattern — in_string","title":"Check if character value matches the provided pattern — in_string","text":"Check character value matches provided pattern","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/in_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if character value matches the provided pattern — in_string","text":"","code":"in_string(x, pattern, ...)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/in_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if character value matches the provided pattern — in_string","text":"x String value. pattern Pattern matched x. ... Extra arguments passed grepl.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/is_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare the string to empty value — is_empty","title":"Compare the string to empty value — is_empty","text":"Compare string empty value","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/is_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare the string to empty value — is_empty","text":"","code":"is_empty(x)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/is_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare the string to empty value — is_empty","text":"x String value.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/lget_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract attribute of each element from a set of lists — lget_attr","title":"Extract attribute of each element from a set of lists — lget_attr","text":"Extract attribute element set lists","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/lget_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract attribute of each element from a set of lists — lget_attr","text":"","code":"lget_attr(list_obj, attribute)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/lget_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract attribute of each element from a set of lists — lget_attr","text":"list_obj List lists. nested list contain el_name object. attribute Name attribute extract object.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/lget_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract attribute of each element from a set of lists — lget_attr","text":"Vector length, storing extracted attributes.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/operator_name_prefix.html","id":null,"dir":"Reference","previous_headings":"","what":"Prefix used for renaming operators names — operator_name_prefix","title":"Prefix used for renaming operators names — operator_name_prefix","text":"Required due erroneous operations objects names '' ''.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/operator_name_prefix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prefix used for renaming operators names — operator_name_prefix","text":"","code":"operator_name_prefix"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/operator_name_prefix.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Prefix used for renaming operators names — operator_name_prefix","text":"object class character length 1.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/prefix_operators_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename operators with the provided prefix — prefix_operators_name","title":"Rename operators with the provided prefix — prefix_operators_name","text":"Rename operators provided prefix","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/prefix_operators_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename operators with the provided prefix — prefix_operators_name","text":"","code":"prefix_operators_name(operators)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/prefix_operators_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename operators with the provided prefix — prefix_operators_name","text":"operators List storing queryOperators.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-condition.html","id":null,"dir":"Reference","previous_headings":"","what":"Register new or list existing query conditions — query-condition","title":"Register new or list existing query conditions — query-condition","text":"Condition two-argument function `|` `&` used combine pair rules.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-condition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register new or list existing query conditions — query-condition","text":"","code":"queryCondition(method)  setQueryConditions(..., .queryBuilderConfig = queryBuilderConfig)  listQueryConditions(.queryBuilderConfig = queryBuilderConfig, print = TRUE)  default_conditions"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-condition.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Register new or list existing query conditions — query-condition","text":"object class list length 2.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-condition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register new or list existing query conditions — query-condition","text":"method R function two parameters used combine pair rules. ... Name-value pairs defining condition name method respectively. defined usage queryCondition function. .queryBuilderConfig R6 class object storing query configuration. See queryBuilderConfigClass. print list operators printed console?","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-condition.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register new or list existing query conditions — query-condition","text":"queryCondition defines condition method. setQueryConditions     used register defined conditions default custom queryBuilderConfigClass object. listQueryConditions returns list registered conditions. default_conditions object storing default definitions conditions.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-condition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register new or list existing query conditions — query-condition","text":"","code":"setQueryConditions(   \"XOR\" = queryCondition(xor) ) query <- queryGroup(   condition = \"XOR\",   queryRule(\"am\", \"equal\", 1),   queryRule(\"vs\", \"equal\", 1) ) queryToExpr(query) #> xor(am == 1, vs == 1)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-operator.html","id":null,"dir":"Reference","previous_headings":"","what":"Register new or list existing query operators — query-operator","title":"Register new or list existing query operators — query-operator","text":"Operator functions maximum two arguments. first argument interpreted field (e.g. column name), second one filtering value interpreted operator accordingly. operators, 'is_empty' (compares field values empty string) require value provided.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-operator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register new or list existing query operators — query-operator","text":"","code":"queryOperator(method)  setQueryOperators(..., .queryBuilderConfig = queryBuilderConfig)  listQueryOperators(.queryBuilderConfig = queryBuilderConfig, print = TRUE)  default_operators"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-operator.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Register new or list existing query operators — query-operator","text":"object class list length 20.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-operator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register new or list existing query operators — query-operator","text":"method R function operator transformed parsing result R expression. function take two parameters. first one (obligatory) variable vector, second one additional parameters interpreted operator. negated exclamation mark e.g. queryOperator(!startsWith) interpreted negation associated expression. ... Name-value pairs defining operator name method respectively. defined usage queryOperator function. .queryBuilderConfig R6 class object storing query configuration. See queryBuilderConfigClass. print list operators printed console?","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-operator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register new or list existing query operators — query-operator","text":"single `quote` storing provided method.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-operator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register new or list existing query operators — query-operator","text":"Operators stored quotes, interpreted converting query filtering expression. queryOperator defines custom operator can used generated query. setQueryOperators     used register defined operators default custom queryBuilderConfigClass object. listQueryOperators allows list available operators specific column type. default_operators object storing default definitions operators.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-operator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register new or list existing query operators — query-operator","text":"","code":"listQueryOperators() #> equal: == #> not_equal: != #> in: %in% #> not_in: !`%in%` #> less: < #> less_or_equal: <= #> greater: > #> greater_or_equal: >= #> between: queryBuilder::in_range #> not_between: !queryBuilder::in_range #> begins_with: startsWith #> not_begins_with: !startsWith #> contains: queryBuilder::in_string #> not_contains: !queryBuilder::in_string #> ends_with: endsWith #> not_ends_with: !endsWith #> is_empty: queryBuilder::is_empty #> not_is_empty: !queryBuilder::is_empty #> is_null: is.na #> not_is_null: !is.na  in_closed_range <- function(x, range) {   x >= range[1] & x <= range[2] }  setQueryOperators(   \"within\" = queryOperator(in_closed_range),   \"not_within\" = queryOperator(!in_closed_range) ) query <- queryGroup(   condition = \"AND\",   queryRule(\"am\", \"equal\", 1),   queryRule(\"qsec\", \"within\", c(10, 15)),   queryRule(\"disp\", \"not_within\", c(10, 15)) ) queryToExpr(query) #> am == 1 & in_closed_range(qsec, c(10, 15)) & !in_closed_range(disp,  #>     c(10, 15))"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Define filtering query — query-rules","title":"Define filtering query — query-rules","text":"Query configuration consisting rules group. Rule defines single filtering expression whereas group combining multiple rules (nested groups) provided condition.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define filtering query — query-rules","text":"","code":"queryGroup(..., condition = \"AND\")  queryRule(field, operator, value = NULL, ...)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define filtering query — query-rules","text":"... Rules defined queryRule function. condition Group condition. default '' '' available. set custom one use setQueryConditions. field Field filter applied rule. set custom one use setQueryOperators. operator Name operator applied rule. value (optional) Values applied rule. operators, 'is_null', require value provided.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define filtering query — query-rules","text":"Nested lists structure.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-rules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define filtering query — query-rules","text":"example expression `== 1 | (vs == 0 & qsec > 10)` can distinct following rules groups: Rules: - `== 1` - related `` field, applies `==` operator `1` value, - `vs == 0` - related `vs` field, applies `==` operator `1` value, - `qsec > 10` - related `qsec` field, applies `>` operator `10` value. Groups: - `(vs == 0 & qsec > 10)` - combines two rules (`vs == 0` `qsec > 10`) `&` condition, - `== 1 | (vs == 0 & qsec > 10)` - combines rule `== 1` group `(vs == 0 & qsec > 10)` `|` condition. query can defined 'queryBuilder' following way: queryGroup(     condition = \"\",     queryRule(\"\", \"equal\", 1)     queryGroup(       condition = \"\",       queryRule(\"vs\", \"equal\", 0),       queryRule(\"qsec\", \"greater\", 10)     )   ) Connection conditions operators names R-based counterparts defined queryBuilderConfig class. defined query can converted filtering expression queryToExpr function.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query-rules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define filtering query — query-rules","text":"","code":"queryGroup(   condition = \"OR\",   queryRule(\"am\", \"equal\", 1),   queryGroup(     condition = \"AND\",     queryRule(\"vs\", \"equal\", 0),     queryRule(\"qsec\", \"greater\", 10)   ) ) #> $condition #> [1] \"OR\" #>  #> $rules #> $rules[[1]] #> $rules[[1]]$id #> [1] \"am\" #>  #> $rules[[1]]$field #> [1] \"am\" #>  #> $rules[[1]]$operator #> [1] \"equal\" #>  #> $rules[[1]]$value #> [1] 1 #>  #>  #> $rules[[2]] #> $rules[[2]]$condition #> [1] \"AND\" #>  #> $rules[[2]]$rules #> $rules[[2]]$rules[[1]] #> $rules[[2]]$rules[[1]]$id #> [1] \"vs\" #>  #> $rules[[2]]$rules[[1]]$field #> [1] \"vs\" #>  #> $rules[[2]]$rules[[1]]$operator #> [1] \"equal\" #>  #> $rules[[2]]$rules[[1]]$value #> [1] 0 #>  #>  #> $rules[[2]]$rules[[2]] #> $rules[[2]]$rules[[2]]$id #> [1] \"qsec\" #>  #> $rules[[2]]$rules[[2]]$field #> [1] \"qsec\" #>  #> $rules[[2]]$rules[[2]]$operator #> [1] \"greater\" #>  #> $rules[[2]]$rules[[2]]$value #> [1] 10 #>  #>  #>  #>  #>"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilder-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Filtering Query from Configuration — queryBuilder-package","title":"Build Filtering Query from Configuration — queryBuilder-package","text":"Build Filtering Query Configuration","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Default object storing 'queryBuilder' configuration. — queryBuilderConfig","title":"Default object storing 'queryBuilder' configuration. — queryBuilderConfig","text":"Default object storing 'queryBuilder' configuration.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default object storing 'queryBuilder' configuration. — queryBuilderConfig","text":"","code":"queryBuilderConfig"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfig.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default object storing 'queryBuilder' configuration. — queryBuilderConfig","text":"object class queryBuilderConfig (inherits R6) length 8.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"R6 class representing queryBuilderConfig object. R6 class representing queryBuilderConfig object.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"object responsible storing definitions operators conditions used generate query expression. also allows manage objects provided methods.","code":""},{"path":[]},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"queryBuilderConfigClass$new() queryBuilderConfigClass$add() queryBuilderConfigClass$remove() queryBuilderConfigClass$get_from_private() queryBuilderConfigClass$set_to_private() queryBuilderConfigClass$reset() queryBuilderConfigClass$clone()","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"Create queryBuilderConfig object initialized conditions operators.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"","code":"queryBuilderConfigClass$new(   conditions = default_conditions,   operators = default_operators,   ... )"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"conditions Conditions. operators Operators. ... Unused.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"object class `queryBuilderConfig`.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"method-add-","dir":"Reference","previous_headings":"","what":"Method add()","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"Add conditions conditions queryBuilderConfig object.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"","code":"queryBuilderConfigClass$add(conditions = NULL, operators = NULL)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"conditions Conditions. operators Operators.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"method-remove-","dir":"Reference","previous_headings":"","what":"Method remove()","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"Remove conditions operators queryBuilderConfig object.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"","code":"queryBuilderConfigClass$remove(conditions_id = NULL, operators_id = NULL)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"conditions_id Id conditions remove. operators_id Id operators remove.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"method-get-from-private-","dir":"Reference","previous_headings":"","what":"Method get_from_private()","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"Get private elements queryBuilderConfig object.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"","code":"queryBuilderConfigClass$get_from_private(name)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"name Name element get.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"method-set-to-private-","dir":"Reference","previous_headings":"","what":"Method set_to_private()","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"Set private elements queryBuilderConfig object.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"","code":"queryBuilderConfigClass$set_to_private(name, value)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"name Name element set. value New element value.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"method-reset-","dir":"Reference","previous_headings":"","what":"Method reset()","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"Restore default conditions conditions queryBuilderConfig object clear remaining pprivate objects.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"","code":"queryBuilderConfigClass$reset()"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"objects class cloneable method.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"","code":"queryBuilderConfigClass$clone(deep = FALSE)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryBuilderConfigClass.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing queryBuilderConfig object. — queryBuilderConfigClass","text":"deep Whether make deep clone.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryToExpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse query rules to R filtering expression — queryToExpr","title":"Parse query rules to R filtering expression — queryToExpr","text":"function takes list condition rules provided widget (input[[<widget-name>]]) returns valid R expression can used example filter function.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryToExpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse query rules to R filtering expression — queryToExpr","text":"","code":"queryToExpr(query, keep_na = FALSE, .queryBuilderConfig = queryBuilderConfig)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryToExpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse query rules to R filtering expression — queryToExpr","text":"query Query definition (see queryRule queryGroup). keep_na query keep exclude missing values? .queryBuilderConfig R6 class object storing query configuration. See queryBuilderConfigClass.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/queryToExpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse query rules to R filtering expression — queryToExpr","text":"","code":"query <- queryGroup(   condition = \"AND\",   queryGroup(     queryRule(       field = \"Species\",       operator = \"equal\",       value = \"setosa\"     ),     queryRule(       field = \"Petal.Length\",       operator = \"less\",       value = 1.2     )   ) ) queryToExpr(query) #> Species == \"setosa\" & Petal.Length < 1.2 dplyr::filter(iris, !!queryToExpr(query)) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1          4.3         3.0          1.1         0.1  setosa #> 2          4.6         3.6          1.0         0.2  setosa"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query_to_expr_bare.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert query definition to expression — query_to_expr_bare","title":"Convert query definition to expression — query_to_expr_bare","text":"Convert query definition expression","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query_to_expr_bare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert query definition to expression — query_to_expr_bare","text":"","code":"query_to_expr_bare(query, operators, conditions, keep_na)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query_to_expr_bare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert query definition to expression — query_to_expr_bare","text":"query Query definition (see queryRule queryGroup). operators List storing queryOperators. conditions List storing queryConditions. keep_na rule expression extended rule excluding/including 'NA' values?","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/query_to_expr_bare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert query definition to expression — query_to_expr_bare","text":"Character value storing expression parsed.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/remove_by_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove list elements by their names — remove_by_name","title":"Remove list elements by their names — remove_by_name","text":"Remove list elements names","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/remove_by_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove list elements by their names — remove_by_name","text":"","code":"remove_by_name(list_obj, ids)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/remove_by_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove list elements by their names — remove_by_name","text":"list_obj List object. ids Objects names removed.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/remove_by_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove list elements by their names — remove_by_name","text":"List.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/rule_to_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert rule definition to expression — rule_to_expr","title":"Convert rule definition to expression — rule_to_expr","text":"Convert rule definition expression","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/rule_to_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert rule definition to expression — rule_to_expr","text":"","code":"rule_to_expr(rule, operators, keep_na = FALSE)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/rule_to_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert rule definition to expression — rule_to_expr","text":"rule Rule definition (see queryRule). operators List storing queryOperators. keep_na expression extended rule excluding/including 'NA' values?","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/rule_to_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert rule definition to expression — rule_to_expr","text":"Character value storing expression parsed.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/substitute_q.html","id":null,"dir":"Reference","previous_headings":"","what":"Substitute expression stored as a variable — substitute_q","title":"Substitute expression stored as a variable — substitute_q","text":"Substitute expression stored variable","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/reference/substitute_q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Substitute expression stored as a variable — substitute_q","text":"","code":"substitute_q(x, env)"},{"path":"https://r-world-devs.github.io/queryBuilder/reference/substitute_q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Substitute expression stored as a variable — substitute_q","text":"x Expression substituted. env List arguments substitute x.","code":""},{"path":"https://r-world-devs.github.io/queryBuilder/news/index.html","id":"querybuilder-010","dir":"Changelog","previous_headings":"","what":"queryBuilder 0.1.0","title":"queryBuilder 0.1.0","text":"First release.","code":""}]
